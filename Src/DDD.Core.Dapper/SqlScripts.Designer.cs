//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DDD.Core.Infrastructure.Data {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SqlScripts {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SqlScripts() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DDD.Core.Infrastructure.Data.SqlScripts", typeof(SqlScripts).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO FailedEventStream
        ///           (StreamId,
        ///            StreamType,
        ///            StreamSource,
        ///            StreamPosition,
        ///            EventId,
        ///            EventType,
        ///            ExceptionTime,
        ///            ExceptionType,
        ///            ExceptionMessage,
        ///            ExceptionSource,
        ///            ExceptionInfo,
        ///            BaseExceptionType,
        ///            BaseExceptionMessage,
        ///            RetryCount,
        ///            RetryMax,
        ///            RetryDelays,
        ///            BlockSize)
        ///     VALUES
        ///         [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ExcludeFailedEventStream {
            get {
                return ResourceManager.GetString("ExcludeFailedEventStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT   Type,
        ///         Source,
        ///         Position,
        ///         RetryMax,
        ///         RetryDelays,
        ///         BlockSize
        ///FROM	 EventStream
        ///ORDER BY Source, Type.
        /// </summary>
        internal static string FindEventStreams {
            get {
                return ResourceManager.GetString("FindEventStreams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT   StreamId,          
        ///         StreamType,        
        ///         StreamSource,      
        ///         StreamPosition,
        ///         EventId,
        ///         ExceptionTime,
        ///         RetryCount,
        ///         RetryMax,
        ///         RetryDelays,
        ///         BlockSize
        ///FROM	 FailedEventStream
        ///ORDER BY StreamSource, StreamType, StreamId.
        /// </summary>
        internal static string FindFailedEventStreams {
            get {
                return ResourceManager.GetString("FindFailedEventStreams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT CommandId,
        ///       CommandType,
        ///       Body,
        ///       BodyFormat,
        ///       RecurringExpression
        ///FROM Command
        ///WHERE CommandType = @CommandType.
        /// </summary>
        internal static string FindRecurringCommandByType {
            get {
                return ResourceManager.GetString("FindRecurringCommandByType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT CommandId,
        ///       CommandType,
        ///       Body,
        ///       BodyFormat,
        ///       RecurringExpression
        ///FROM Command
        ///ORDER BY CommandId.
        /// </summary>
        internal static string FindRecurringCommands {
            get {
                return ResourceManager.GetString("FindRecurringCommands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE
        ///FROM  FailedEventStream
        ///WHERE StreamId = @Id
        ///AND   StreamType = @Type
        ///AND   StreamSource = @Source.
        /// </summary>
        internal static string IncludeFailedEventStream {
            get {
                return ResourceManager.GetString("IncludeFailedEventStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO Command
        ///           (CommandId,
        ///            CommandType,
        ///            Body,
        ///            BodyFormat,
        ///            RecurringExpression)
        ///     VALUES
        ///           (@CommandId,
        ///            @CommandType,
        ///            @Body,
        ///            @BodyFormat,
        ///            @RecurringExpression).
        /// </summary>
        internal static string InsertRecurringCommand {
            get {
                return ResourceManager.GetString("InsertRecurringCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT TOP (@Top)
        ///		 EventId,
        ///         EventType,
        ///         OccurredOn,
        ///         Body,
        ///         BodyFormat,
        ///         StreamId,
        ///         StreamType,
        ///         IssuedBy
        ///FROM	 Event
        ///WHERE	 EventId &gt; @StreamPosition
        ///AND      StreamId NOT IN @ExcludedStreamIds
        ///AND		 StreamType = @StreamType
        ///ORDER BY EventId.
        /// </summary>
        internal static string ReadEventStream {
            get {
                return ResourceManager.GetString("ReadEventStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT TOP (@Top)
        ///		 EventId,
        ///         EventType,
        ///         OccurredOn,
        ///         Body,
        ///         BodyFormat,
        ///         StreamId,
        ///         StreamType,
        ///         IssuedBy
        ///FROM	 Event
        ///WHERE	 EventId BETWEEN @EventIdMin AND @EventIdMax
        ///AND		 StreamId = @StreamId
        ///AND		 StreamType = @StreamType
        ///ORDER BY EventId.
        /// </summary>
        internal static string ReadFailedEventStream {
            get {
                return ResourceManager.GetString("ReadFailedEventStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO EventStream
        ///           (Type,
        ///            Source,
        ///            Position,
        ///            RetryMax,
        ///            RetryDelays,
        ///            BlockSize)
        ///     VALUES
        ///           (@Type,
        ///            @Source,
        ///            @Position,
        ///            @RetryMax,
        ///            @RetryDelays,
        ///            @BlockSize).
        /// </summary>
        internal static string SubscribeToEventStream {
            get {
                return ResourceManager.GetString("SubscribeToEventStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE EventStream
        ///SET Position = @Position
        ///WHERE Type = @Type
        ///AND Source = @Source.
        /// </summary>
        internal static string UpdateEventStreamPosition {
            get {
                return ResourceManager.GetString("UpdateEventStreamPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE FailedEventStream
        ///SET    StreamPosition = @StreamPosition,
        ///       EventId = @EventId,
        ///       EventType = @EventType,
        ///       ExceptionTime = @ExceptionTime,
        ///       ExceptionType = @ExceptionType,
        ///       ExceptionMessage = @ExceptionMessage,
        ///       ExceptionSource = @ExceptionSource,
        ///       ExceptionInfo = @ExceptionInfo,
        ///       BaseExceptionType = @BaseExceptionType,
        ///       BaseExceptionMessage = @BaseExceptionMessage,
        ///       RetryCount = @RetryCount,
        ///       RetryMax = @RetryMax,
        ///       R [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UpdateFailedEventStream {
            get {
                return ResourceManager.GetString("UpdateFailedEventStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE FailedEventStream
        ///SET    StreamPosition = @Position
        ///WHERE  StreamId = @Id
        ///AND    StreamType = @Type
        ///AND    StreamSource = @Source.
        /// </summary>
        internal static string UpdateFailedEventStreamPosition {
            get {
                return ResourceManager.GetString("UpdateFailedEventStreamPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE Command
        ///SET Body = @Body,
        ///    BodyFormat = @BodyFormat,
        ///    RecurringExpression = @RecurringExpression
        ///WHERE CommandId = @CommandId.
        /// </summary>
        internal static string UpdateRecurringCommand {
            get {
                return ResourceManager.GetString("UpdateRecurringCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE Command
        ///SET LastExecutionTime = @LastExecutionTime,
        ///    LastExecutionStatus = @LastExecutionStatus,
        ///    LastExceptionInfo = @LastExceptionInfo
        ///WHERE CommandId = @CommandId.
        /// </summary>
        internal static string UpdateRecurringCommandStatus {
            get {
                return ResourceManager.GetString("UpdateRecurringCommandStatus", resourceCulture);
            }
        }
    }
}
